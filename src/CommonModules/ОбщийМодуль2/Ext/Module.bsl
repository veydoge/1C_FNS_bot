&НаСервере
Функция Получить() Экспорт // тут я получаю случайное первое сообщение из первого обсуждения 
	ОтборОбсуждений = Новый ОтборОбсужденийСистемыВзаимодействия();
	Обсуждения = СистемаВзаимодействия.ПолучитьОбсуждения(ОтборОбсуждений);
	ОтборСообщений = Новый ОтборСообщенийСистемыВзаимодействия();  
	ПоследнееСообщениеИд = Новый ИдентификаторСообщенияСистемыВзаимодействия(Константы.ИдентификаторПоследнего.Получить());
	ОтборСообщений.После = ПоследнееСообщениеИд;     
	ПоследнееСообщение = СистемаВзаимодействия.ПолучитьСообщение(ПоследнееСообщениеИд);
	Обсуждение = Обсуждения[0];
	ОтборСообщений.Обсуждение = Обсуждение.Идентификатор;   
	Сообщения = СистемаВзаимодействия.ПолучитьСообщения(ОтборСообщений); 
	
	//идентфикатор записывать в переменную
	
	
	Для каждого Сообщение из Сообщения Цикл
		Попытка    
			
		 //Константы.ИдентификаторПоследнего.Установить(Сообщение.Идентификатор);
		ПоследнееСообщение =Сообщение.Идентификатор;
		 
		 
		СтрокиЧека = СтрРазделить(Сообщение.Текст, Символы.ПС, Ложь);
	 		 
		 // Парсинг касающийся даты
		 
		СтрокаДаты = СтрРазделить(СтрокиЧека[1], ":")[1] + " " + СтрРазделить(СтрокиЧека[1], ":")[2]; 
		ИтоговаяДата = РаспарситьДату(СтрокаДаты); 
		 		     
		//
		
		Отправитель = СтрРазделить(СтрокиЧека[0], ":")[1];
		Отправитель = СтрРазделить(СокрЛП(Отправитель), " "); 
		Отправитель.Удалить(0);
		Отправитель = СтрСоединить(Отправитель, " ");
		
		ИНН = СтрРазделить(СтрокиЧека[2], ":");   
		
		
		СписокТоваров = Новый Массив();
		Счетчик = 3;
		Пока СтрРазделить(СтрокиЧека[Счетчик], ":")[0] <> "Итого" Цикл
			Если Счетчик % 2 = 1 Тогда
				НовыйТовар = Справочники.Товары.СоздатьЭлемент();
				НовыйТовар.Наименование = СтрРазделить(СтрокиЧека[Счетчик], " ")[1];
				//Сообщить("Это строка с товаром" + СтрокиЧека[Счетчик]);
			Иначе
				//Сообщить("Это строка с суммой" + СтрокиЧека[Счетчик]);   
				СтрокаСуммы = СтрРазделить(СтрокиЧека[Счетчик], " ");
				НовыйТовар.Цена = Число(СтрокаСуммы[0]);
				НовыйТовар.Количество = Число(СтрокаСуммы[1]);
				НовыйТовар.Сумма = Число(СтрокаСуммы[4]);
				СписокТоваров.Добавить(НовыйТовар)
			КонецЕсли;
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		
		
		Описание = СтрСоединить(СтрРазделить(СтрокиЧека[3], ":"), СтрРазделить(СтрокиЧека[4], ":"));
		Итого = СтрРазделить(СтрокиЧека[5], ":");
		Наличные = СтрРазделить(СтрокиЧека[6], ": ", Ложь)[1];
		Безналичные = СтрРазделить(СтрокиЧека[7], ": ", Ложь)[1];
		НомерСмены = СтрРазделить(СтрокиЧека[8], ": ", Ложь)[2];
		МестоРасчётов = СтрРазделить(СтрокиЧека[9], ":");
		АдресРасчётов = СтрРазделить(СтрокиЧека[10], ":");
		НомерЧека = СтрРазделить(СтрокиЧека[11], ": ", Ложь)[2];
		СНО = СтрРазделить(СтрокиЧека[12], ":");
		РНККТ = СтрРазделить(СтрокиЧека[13], ":");
		ФН = СтрРазделить(СтрокиЧека[14], ":");
		ФД = СтрРазделить(СтрокиЧека[15], ":");
		ФП = СтрРазделить(СтрокиЧека[16], ":");  
		 
		 //
		 
		НовыйЧек = Документы.Чеки.СоздатьДокумент(); 
		НовыйЧек.Дата = ИтоговаяДата; 
		НовыйЧек.Описание = Описание;
		НовыйЧек.Итого = Итого[1];
		НовыйЧек.Наличные = Число(СокрЛП(Наличные));
		НовыйЧек.Безналичные = Число(СокрЛП(Безналичные));
		НовыйЧек.НомерСмены = Число(СокрЛп(НомерСмены));
		НовыйЧек.МестоРасчетов = МестоРасчётов[1];
		НовыйЧек.АдресРасчетов = АдресРасчётов[1];
		НовыйЧек.НомерЧека = Число(СокрЛП(НомерЧека));
		НовыйЧек.СНО = СНО[1];
		НовыйЧек.РНККТ = РНККТ[1];
		НовыйЧек.ФН = ФН[1];
		НовыйЧек.ФД = ФД[1];
		НовыйЧек.ФП = ФП[1];
		 
		 
		
		 
		 //  
		Статус = Справочники.Контрагенты.НайтиПоНаименованию(Отправитель); // добавление контрагента, если ранее такого не было
		Если Статус = Справочники.Контрагенты.ПустаяСсылка() Тогда
			НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент(); 
			НовыйКонтрагент.Наименование = Отправитель;
			НовыйКонтрагент.ИНН = Число(ИНН[1]);
			НовыйКонтрагент.Записать();
			НовыйЧек.Контрагент = НовыйКонтрагент.Ссылка;
		Иначе
			НовыйЧек.Контрагент = Статус;
		КонецЕсли;          
		
		
		НовыйЧек.Записать();
		
			
	 	Исключение;
		КонецПопытки;
	Константы.ИдентификаторПоследнего.Установить(Сообщение.Идентификатор);
		 
	КонецЦикла;
	Возврат "";
	// Возврат Сообщения[0].Текст;
КонецФункции   

Функция РаспарситьДату(СтрокаДаты) // парсить строку вида день.месяц.год часы:минуты в дату
		СтрокаДаты = СокрЛП(СтрокаДаты);
		СтрокаДаты = СтрЗаменить(СтрокаДаты, ".", " ");
		СтрокаДаты = СтрЗаменить(СтрокаДаты, ":", " "); 
		МассивСтрок = СтрРазделить(СтрокаДаты, " ");
		  
		Год = Число(МассивСтрок[2]);
		Месяц = Число(МассивСтрок[1]);
		День = Число(МассивСтрок[0]);
		Час = Число(МассивСтрок[3]);
		Минута = Число(МассивСтрок[4]);
		
		ИтоговаяДата = Дата(Год, Месяц, День, Час, Минута, 0);
		
		Возврат ИтоговаяДата;

КонецФункции